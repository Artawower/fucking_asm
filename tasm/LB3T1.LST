Turbo Assembler	 Version 4.1	    05/14/17 23:07:41	    Page 1
lb3t1.asm



      1				     public InputInt, OutputMsg, min
      2	0000			     code segment
      3				     assume cs:	code, ds:data, ss: stek
      4
      5	0000			     InputInt proc near
      6				       ;вывод в ax
      7	0000  53		       push bx
      8	0001  51		       push cx
      9	0002  52		       push dx
     10	0003  56		       push si
     11	0004  BA 0010r		       mov dx,offset strdsc
     12	0007  B4 0A		       mov ah,0Ah
     13	0009  CD 21		       int 21h
     14	000B  B2 0A		       mov dl,0Ah
     15	000D  B4 02		       mov ah,2
     16	000F  CD 21		       int 21h
     17	0011  33 C0		       xor ax,ax
     18	0013  33 C9		       xor cx,cx
     19	0015  8A 0E 0011r	       mov cl,[strdsc+1]
     20	0019  BE 0012r		       mov si,offset strbuf
     21	001C  BB 000A		       mov bx,10
     22	001F			     s1:
     23	001F  F7 E3		       mul bx
     24	0021  8A 14		       mov dl,[si]
     25	0023  46		       inc si
     26	0024  80 EA 30		       sub dl,30h
     27	0027  03 C2		       add ax,dx
     28	0029  E2 F4		       loop s1
     29	002B  5E		       pop si
     30	002C  5A		       pop dx
     31	002D  59		       pop cx
     32	002E  5B		       pop bx
     33	002F  C3		       ret
     34	0030			     InputInt  endp
     35
     36	0030			     OutputMsg proc near
     37				     ; поместить строку в dx
     38	0030  B4 09		     mov ah, 9
     39	0032  CD 21		     int 21h
     40	0034  C3		     ret
     41	0035			     OutputMsg endp
     42
     43	0035			     min proc near
     44	0035  55		     push bp
     45	0036  8B EC		     mov bp, sp
     46				     ;по ссылке	тип
     47	0038  8B 46 04		     mov ax, [bp + 4]
     48	003B  8B 4E 06		     mov cx, [bp + 6]
     49				     ; pop ax
     50				     ; pop cx
     51	003E  2B C1		     sub ax, cx
     52	0040  79 2B		     jns bg2
     53	0042  78 1D		     js	bg1
     54	0044  C3		     ret
     55	0045			     min  endp
     56
     57	0045			     start:
Turbo Assembler	 Version 4.1	    05/14/17 23:07:41	    Page 2
lb3t1.asm



     58	0045  B8 0000s		       mov ax, data
     59	0048  8E D8		       mov ds, ax
     60	004A  BA 0018r		       mov dx, offset opt1
     61	004D  E8 FFE0		       call OutputMsg
     62	0050  E8 FFAD		       call InputInt
     63
     64	0053  50		       push ax
     65				       ; mov cx, ax
     66	0054  BA 002Fr		       mov dx, offset opt2
     67	0057  E8 FFD6		       call OutputMsg
     68	005A  E8 FFA3		       call InputInt
     69	005D  50		       push ax
     70	005E  E8 FFD4		       call min
     71
     72
     73	0061			     bg1:
     74	0061  BA 0047r			 mov dx, offset	min1
     75	0064  B4 09			 mov ah, 9
     76	0066  CD 21			 int 21h
     77	0068  B8 4C00			 mov ax, 4c00h
     78	006B  CD 21			 int 21h
     79	006D			     bg2:
     80	006D  BA 006Ar			 mov dx, offset	min2
     81	0070  B4 09			 mov ah, 9
     82	0072  CD 21			 int 21h
     83	0074  B8 4C00			 mov ax, 4c00h
     84	0077  CD 21			 int 21h
     85	0079			     code ends
     86
     87	0000			     data Segment
     88	0000  ????????????????	       str_number dq
*Warning* lb3t1.asm(88)	Missing	operand	- trailing ? assumed
     89	0008  0064		       x	  dw 100d
     90	000A  006E		       y	  dw 110d
     91	000C  000000E6		       z	  dd 230d
     92	0010  06 00		       strdsc	  db 6,	0
     93	0012  06*(??)		       strbuf	  db 6 dup (?)
     94	0018  49 6E 70 75 74 20	66+    opt1	  db 'Input first number: ', 13,10,'$'
     95	      69 72 73 74 20 6E	75+
     96	      6D 62 65 72 3A 20	0D+
     97	      0A 24
     98	002F  49 6E 70 75 74 20	73+    opt2	  db 'Input second number: ', 13,10,'$'
     99	      65 63 6F 6E 64 20	6E+
    100	      75 6D 62 65 72 3A	20+
    101	      0D 0A 24
    102	0047  54 68 65 20 66 69	72+    min1	  db 'The first	number bigger then two', 13,10,'$'
    103	      73 74 20 6E 75 6D	62+
    104	      65 72 20 62 69 67	67+
    105	      65 72 20 74 68 65	6E+
    106	      20 74 77 6F 0D 0A	24
    107	006A  54 68 65 20 73 65	63+    min2	  db 'The second number	bigger then one', 13,10,'$'
    108	      6F 6E 64 20 6E 75	6D+
    109	      62 65 72 20 62 69	67+
    110	      67 65 72 20 74 68	65+
    111	      6E 20 6F 6E 65 0D	0A+
    112	      24
    113	008E  ????		     Result dw
Turbo Assembler	 Version 4.1	    05/14/17 23:07:41	    Page 3
lb3t1.asm



*Warning* lb3t1.asm(98)	Missing	operand	- trailing ? assumed
    114	0090			     data ends
    115
    116	0000			     stek segment stack
    117	0000  80*(????)		       dw 128 dup (?)
    118	0100			     stek ends
    119				     end Start
Turbo Assembler	 Version 4.1	    05/14/17 23:07:41	    Page 4
Symbol Table




Symbol Name		Type   Value			   Cref	(defined at #)

??DATE			Text   "05/14/17"
??FILENAME		Text   "lb3t1	"
??TIME			Text   "23:07:41"
??VERSION		Number 040A
@CPU			Text   0101H
@CURSEG			Text   STEK			   #2  #87  #116
@FILENAME		Text   LB3T1
@WORDSIZE		Text   2			   #2  #87  #116
BG1			Near   CODE:0061		   53  #73
BG2			Near   CODE:006D		   52  #79
INPUTINT		Near   CODE:0000		   1  #5  62  68
MIN			Near   CODE:0035		   1  #43  70
MIN1			Byte   DATA:0047		   74  #102
MIN2			Byte   DATA:006A		   80  #107
OPT1			Byte   DATA:0018		   60  #94
OPT2			Byte   DATA:002F		   66  #98
OUTPUTMSG		Near   CODE:0030		   1  #36  61  67
RESULT			Word   DATA:008E		   #113
S1			Near   CODE:001F		   #22	28
START			Near   CODE:0045		   #57	119
STRBUF			Byte   DATA:0012		   20  #93
STRDSC			Byte   DATA:0010		   11  19  #92
STR_NUMBER		Qword  DATA:0000		   #88
X			Word   DATA:0008		   #89
Y			Word   DATA:000A		   #90
Z			Dword  DATA:000C		   #91

Groups & Segments	Bit Size Align	Combine	Class	   Cref	(defined at #)

CODE			16  0079 Para	none		   #2  3
DATA			16  0090 Para	none		   3  58  #87
STEK			16  0100 Para	Stack		   3  #116
Turbo Assembler	 Version 4.1	    05/14/17 23:07:41	    Page 5
Error Summary



*Warning* lb3t1.asm(88)	Missing	operand	- trailing ? assumed
*Warning* lb3t1.asm(98)	Missing	operand	- trailing ? assumed
