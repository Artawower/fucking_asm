Turbo Assembler	 Version 4.1	    05/26/17 17:33:00	    Page 1
max3v8.asm
      1				     extrn or2:near
      2				     public InputInt, print
      3	0000			     code segment public
      4				     assume cs:	code, ds:data, ss: stek
      5
      6	0000			     InputInt proc near
      7				       ;вывод в ax
      8	0000  53		       push bx
      9	0001  51		       push cx
     10	0002  52		       push dx
     11	0003  56		       push si
     12	0004  BA 0000r		       mov dx,offset strdsc
     13	0007  B4 0A		       mov ah,0Ah
     14	0009  CD 21		       int 21h
     15	000B  B2 0A		       mov dl,0Ah
     16	000D  B4 02		       mov ah,2
     17	000F  CD 21		       int 21h
     18	0011  33 C0		       xor ax,ax
     19	0013  33 C9		       xor cx,cx
     20	0015  8A 0E 0001r	       mov cl,[strdsc+1]
     21	0019  BE 0002r		       mov si,offset strbuf
     22	001C  BB 000A		       mov bx,10
     23	001F			     s1:
     24	001F  F7 E3		       mul bx
     25	0021  8A 14		       mov dl,[si]
     26	0023  46		       inc si
     27	0024  80 EA 30		       sub dl,30h
     28	0027  03 C2		       add ax,dx
     29	0029  E2 F4		       loop s1
     30	002B  5E		       pop si
     31	002C  5A		       pop dx
     32	002D  59		       pop cx
     33	002E  5B		       pop bx
     34	002F  C3		       ret
     35	0030			     InputInt  endp
     36
     37	0030			     print proc	near
     38				     ; поместить строку в dx
     39	0030  B4 09		     mov ah, 9
     40	0032  CD 21		     int 21h
     41	0034  C3		     ret
     42	0035			     print endp
     43
     44	0035			     start:
     45	0035  B8 0000s		       mov ax, data
     46	0038  8E D8		       mov ds, ax
     47	003A  BA 0008r		       lea dx, vvod_1
     48	003D  E8 FFF0		       call print
     49	0040  E8 FFBD		       call InputInt
     50	0043  50		       push ax
     51
     52	0044  BA 001Cr		       lea dx, vvod_2
     53	0047  E8 FFE6		       call print
     54	004A  E8 FFB3		       call InputInt
     55	004D  50		       push ax
     56
     57	004E  E8 0000e		       call or2
Turbo Assembler	 Version 4.1	    05/26/17 17:33:00	    Page 2
max3v8.asm
     58
     59	0051  B4 09		       mov ah, 9
     60	0053  CD 21		       int 21h
     61	0055  B8 4C00		       mov ax, 4c00h
     62	0058  CD 21		       int 21h
     63
     64
     65	005A			     code ends
     66
     67	0000			     data Segment public
     68	0000  06 00		       strdsc	      db 6, 0
     69	0002  06*(??)		       strbuf	      db 6 dup (?)
     70	0008  56 76 65 64 69 74	65+    vvod_1	       db 'Vvedite 1 4islo: ', 13,10,'$'
     71	      20 31 20 34 69 73	6C+
     72	      6F 3A 20 0D 0A 24
     73	001C  56 76 65 64 69 74	65+    vvod_2	       db 'Vvedite 2 4islo: ', 13,10,'$'
     74	      20 32 20 34 69 73	6C+
     75	      6F 3A 20 0D 0A 24
     76	0030  ????		     Result dw
*Warning* max3v8.asm(72) Missing operand - trailing ? assumed
     77	0032			     data ends
     78
     79	0000			     stek segment stack
     80	0000  80*(????)		     dw	128 dup	(?)
     81	0100			     stek ends
     82				     end Start
Turbo Assembler	 Version 4.1	    05/26/17 17:33:00	    Page 3
Symbol Table
Symbol Name		Type   Value			   Cref	(defined at #)
??DATE			Text   "05/26/17"
??FILENAME		Text   "max3v8	"
??TIME			Text   "17:33:00"
??VERSION		Number 040A
@CPU			Text   0101H
@CURSEG			Text   STEK			   #3  #67  #79
@FILENAME		Text   MAX3V8
@WORDSIZE		Text   2			   #3  #67  #79
INPUTINT		Near   CODE:0000		   2  #6  49  54
OR2			Near   ----:---- Extern		   #1  57
PRINT			Near   CODE:0030		   2  #37  48  53
RESULT			Word   DATA:0030		   #76
S1			Near   CODE:001F		   #23	29
START			Near   CODE:0035		   #44	82
STRBUF			Byte   DATA:0002		   21  #69
STRDSC			Byte   DATA:0000		   12  20  #68
VVOD_1			Byte   DATA:0008		   47  #70
VVOD_2			Byte   DATA:001C		   52  #73
Groups & Segments	Bit Size Align	Combine	Class	   Cref	(defined at #)
CODE			16  005A Para	Public		   #3  4
DATA			16  0032 Para	Public		   4  45  #67
STEK			16  0100 Para	Stack		   4  #79
Turbo Assembler	 Version 4.1	    05/26/17 17:33:00	    Page 4
Error Summary
*Warning* max3v8.asm(72) Missing operand - trailing ? assumed

