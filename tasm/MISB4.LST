Turbo Assembler	 Version 4.1	    06/08/17 04:05:40	    Page 1
misb4.asm



      1				     public OutputInt
      2	0000			     code segment
      3				     assume cs:	code, es:data, ss: stek
      4	0000			     OutputInt proc near
      5	0000  50			  push ax
      6	0001  53			  push bx
      7	0002  51			  push cx
      8	0003  52			  push dx
      9	0004  BB 000A			  mov bx, 10
     10	0007  33 C9			  xor cx,cx
     11	0009				  n1:
     12	0009  33 D2			  xor dx,dx
     13	000B  F7 F3			  div bx
     14	000D  41			  inc cx
     15	000E  52			  push dx
     16	000F  0B C0			  or ax,ax
     17	0011  75 F6			  jnz n1
     18	0013  BB 0012r			  mov bx,offset	strbuf
     19	0016			     n2:
     20	0016  5A			 pop dx
     21	0017  80 C2 30			  add dl,30h
     22	001A  88 17			  mov [bx],dl
     23	001C  43			  inc bx
     24	001D  E2 F7			  loop n2
     25	001F  C6 07 24			  mov byte ptr [bx],'$'
     26	0022  BA 0012r			  mov dx,offset	strbuf
     27	0025  B4 09			  mov ah,9
     28	0027  CD 21			  int 21h
     29	0029  5A			  pop dx
     30	002A  59			  pop cx
     31	002B  5B			  pop bx
     32	002C  58			  pop ax
     33	002D  C3			  ret
     34	002E				  endp OutputInt
     35	002E			     start:
     36	002E  B8 0000s		       mov ax, data
     37	0031  8E D8		       mov ds, ax
     38	0033  8E C0		       mov es, ax
     39
     40	0035  33 D2		       xor dx, dx
     41	0037  B9 0008		       mov cx, 8
     42	003A  BF 0000r		       lea di, es:[massiv]
     43	003D  33 DB		       xor bx, bx
     44	003F  B8 000B		       mov ax, 11d
     45
     46	0042  FC		       cld
     47
     48	0043			       m1:
     49	0043  AF			 scasw
     50	0044  75 01			 jne bli
     51	0046  43			 inc bx
     52	0047			       bli:
     53	0047  E2 FA			 loop m1
     54	0049  8B C3			 mov ax, bx
     55	004B  E8 FFB2		       call OutputInt
     56	004E  BA 0018r		       mov dx,offset strend
     57	0051  B4 09		       mov ah,9
Turbo Assembler	 Version 4.1	    06/08/17 04:05:40	    Page 2
misb4.asm



     58	0053  CD 21		       int 21h
     59
     60	0055  B8 4C00		       mov ax, 4c00h
     61	0058  CD 21		       int 21h
     62	005A			     code ends
     63
     64	0000			     data Segment
     65	0000  000B 000B	0042 0299 +    massiv dw 11d, 11d, 66d,	665d, 66d, 344d, 266d, 5221d
     66	      0042 0158	010A 1465
     67	0010  06 00		       strdsc db 6,0
     68	0012  06*(??)		       strbuf db 6 dup (?)
     69	0018  0D 0A 24		       strend  db 13,10,'$'
     70	001B			     data ends
     71
     72	0000			     stek segment stack
     73	0000  80*(????)		     dw	128 dup	(?)
     74	0100			     stek ends
     75				     end Start
Turbo Assembler	 Version 4.1	    06/08/17 04:05:40	    Page 3
Symbol Table




Symbol Name		Type   Value			   Cref	(defined at #)

??DATE			Text   "06/08/17"
??FILENAME		Text   "misb4	"
??TIME			Text   "04:05:40"
??VERSION		Number 040A
@CPU			Text   0101H
@CURSEG			Text   STEK			   #2  #64  #72
@FILENAME		Text   MISB4
@WORDSIZE		Text   2			   #2  #64  #72
BLI			Near   CODE:0047		   50  #52
M1			Near   CODE:0043		   #48	53
MASSIV			Word   DATA:0000		   42  #65
N1			Near   CODE:0009		   #11	17
N2			Near   CODE:0016		   #19	24
OUTPUTINT		Near   CODE:0000		   1  #4  55
START			Near   CODE:002E		   #35	75
STRBUF			Byte   DATA:0012		   18  26  #68
STRDSC			Byte   DATA:0010		   #67
STREND			Byte   DATA:0018		   56  #69

Groups & Segments	Bit Size Align	Combine	Class	   Cref	(defined at #)

CODE			16  005A Para	none		   #2  3
DATA			16  001B Para	none		   3  36  #64
STEK			16  0100 Para	Stack		   3  #72
