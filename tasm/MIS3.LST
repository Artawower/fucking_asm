Turbo Assembler	 Version 4.1	    05/26/17 23:12:24	    Page 1
mis3.asm



      1				     extrn equal_with_0:near
      2				     public InputInt, print
      3	0000			     code segment public
      4				     assume cs:	code, ds:data, ss: stek
      5
      6	0000			     InputInt proc near
      7				       ;вывод в ax
      8	0000  53		       push bx
      9	0001  51		       push cx
     10	0002  52		       push dx
     11	0003  56		       push si
     12	0004  BA 0000r		       mov dx,offset strdsc
     13	0007  B4 0A		       mov ah,0Ah
     14	0009  CD 21		       int 21h
     15	000B  B2 0A		       mov dl,0Ah
     16	000D  B4 02		       mov ah,2
     17	000F  CD 21		       int 21h
     18	0011  33 C0		       xor ax,ax
     19	0013  33 C9		       xor cx,cx
     20	0015  8A 0E 0001r	       mov cl,[strdsc+1]
     21	0019  BE 0002r		       mov si,offset strbuf
     22	001C  BB 000A		       mov bx,10
     23	001F			     s1:
     24	001F  F7 E3		       mul bx
     25	0021  8A 14		       mov dl,[si]
     26	0023  46		       inc si
     27	0024  80 EA 30		       sub dl,30h
     28	0027  03 C2		       add ax,dx
     29	0029  E2 F4		       loop s1
     30	002B  5E		       pop si
     31	002C  5A		       pop dx
     32	002D  59		       pop cx
     33	002E  5B		       pop bx
     34	002F  C3		       ret
     35	0030			     InputInt  endp
     36
     37	0030			     print proc	near
     38				     ; поместить строку в dx
     39	0030  B4 09		     mov ah, 9
     40	0032  CD 21		     int 21h
     41	0034  C3		     ret
     42	0035			     print endp
     43
     44
     45
     46	0035			     start:
     47	0035  B8 0000s		       mov ax, data
     48	0038  8E D8		       mov ds, ax
     49	003A  BA 000Ar		       lea dx, vvedi
     50	003D  E8 FFF0		       call print
     51	0040  E8 FFBD		       call InputInt
     52	0043  A3 0008r		       mov tmp,	ax
     53	0046  B8 0008r		       lea ax, tmp
     54	0049  50		       push ax
     55	004A  E8 0000e		       call equal_with_0
     56	004D  B4 09		       mov ah, 9
     57	004F  CD 21		       int 21h
Turbo Assembler	 Version 4.1	    05/26/17 23:12:24	    Page 2
mis3.asm



     58	0051  B8 4C00		       mov ax, 4c00h
     59	0054  CD 21		       int 21h
     60
     61
     62	0056			     code ends
     63
     64	0000			     data Segment public
     65	0000  06 00		       strdsc	      db 6, 0
     66	0002  06*(??)		       strbuf	      db 6 dup (?)
     67	0008  0000		       tmp	      dw (?)
     68	000A  72 61 76 6E 6F 20	6C+    vvedi	      db 'ravno	li 0?: ', 13,10,'$'
     69	      69 20 30 3F 3A 20	0D+
     70	      0A 24
     71	001A  ????		     Result dw
*Warning* mis3.asm(69) Missing operand - trailing ? assumed
     72	001C			     data ends
     73
     74	0000			     stek segment public stack
     75	0000  80*(????)		       dw 128 dup (?)
     76	0100			     stek ends
     77				     end Start
Turbo Assembler	 Version 4.1	    05/26/17 23:12:24	    Page 3
Symbol Table




Symbol Name		Type   Value			   Cref	(defined at #)

??DATE			Text   "05/26/17"
??FILENAME		Text   "mis3	"
??TIME			Text   "23:12:24"
??VERSION		Number 040A
@CPU			Text   0101H
@CURSEG			Text   STEK			   #3  #64  #74
@FILENAME		Text   MIS3
@WORDSIZE		Text   2			   #3  #64  #74
EQUAL_WITH_0		Near   ----:---- Extern		   #1  55
INPUTINT		Near   CODE:0000		   2  #6  51
PRINT			Near   CODE:0030		   2  #37  50
RESULT			Word   DATA:001A		   #71
S1			Near   CODE:001F		   #23	29
START			Near   CODE:0035		   #46	77
STRBUF			Byte   DATA:0002		   21  #66
STRDSC			Byte   DATA:0000		   12  20  #65
TMP			Word   DATA:0008		   52  53  #67
VVEDI			Byte   DATA:000A		   49  #68

Groups & Segments	Bit Size Align	Combine	Class	   Cref	(defined at #)

CODE			16  0056 Para	Public		   #3  4
DATA			16  001C Para	Public		   4  47  #64
STEK			16  0100 Para	Stack		   4  #74
Turbo Assembler	 Version 4.1	    05/26/17 23:12:24	    Page 4
Error Summary



*Warning* mis3.asm(69) Missing operand - trailing ? assumed
